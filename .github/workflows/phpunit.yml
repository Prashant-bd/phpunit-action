---
name: PHPUnit Tests
on:
  workflow_call:
    inputs:
      composer_prereqs:
        required: false
        type: string
      composer_patches:
        required: false
        type: string
      
jobs:
  PHPUnit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        drupal-version:
          - '9'
          - '10'
        php-version:
          - '8.1'
        experimental: [false]
        do-leniency: ['true']
        include:
          # XXX: 7.4 To be removed when we are no longer actually running it anywhere.
          - drupal-version: '9'
            php-version: '7.4'
            do-leniency: false
            experimental: true
          # XXX: D9 doesn't seem to be installable with PHP 8.2, due to
          # incompatible dependencies.
          - drupal-version: '9'
            php-version: '8.2'
            experimental: false
            do-leniency: true
          - drupal-version: '10'
            php-version: '8.2'
            experimental: false
            do-leniency: true
    continue-on-error: ${{ matrix.experimental }}
    container:
      image: drupal:${{ matrix.drupal-version }}-php${{ matrix.php-version }}
      ports:
        - 80
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: drupal
          POSTGRES_USER: drupal
          POSTGRES_PASSWORD: drupal
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Enable PG_TRGM
        run: |
          apt-get update
          apt-get install -y postgresql-client
          PGHOST=postgres PGUSER=drupal PGPASSWORD=drupal psql --command='CREATE EXTENSION pg_trgm;' drupal
      - name: Run PHPUnit Action
        #uses: discoverygarden/phpunit-action@v1
        uses: discoverygarden/phpunit-action@d10-support # Redirect to tag before merge.
        with:
          composer_package_prerequisites: ${{ inputs.composer_prereqs }}
          composer_patches: ${{ inputs.composer_patches }}
          composer-auth: ${{ secrets.PRIVATE_PACKAGIST_AUTH_ACCESS }}
          drupal-version: ${{ matrix.drupal-version }}
          experimental: ${{ matrix.experimental }}
          do-leniency: ${{ matrix.do-leniency }}
